{"componentChunkName":"component---src-templates-post-template-tsx","path":"/boj/14726","result":{"data":{"markdownRemark":{"id":"10e1310f-f24a-564e-a0f4-df54fcdedf88","html":"<h2>문제 링크</h2>\n<p><a href=\"https://www.acmicpc.net/problem/14726\">14726번: 신용카드 판별 (acmicpc.net)</a></p>\n<h2>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">isluhn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> number <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>number <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsum <span class=\"token operator\">+=</span> temp <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> temp <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\tnumber <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> sum <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token double-colon punctuation\">::</span>cin <span class=\"token operator\">>></span> n<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> card<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token double-colon punctuation\">::</span>cin <span class=\"token operator\">>></span> card<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isluhn</span><span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"T\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>풀이 설명</h2>\n<p>이 문제는 룬 알고리즘이라는 알고리즘을 설명하며 실제 카드 번호를 판별 과정에서 쓰이는 유용한 알고리즘 입니다.</p>\n<p>룬 알고리즘 공식은 다음과 같습니다.</p>\n<ol>\n<li>\n<p>오른쪽에서 번호를 세며 숫자를 더한다.</p>\n</li>\n<li>\n<p>더할때 2의 배수 자리들은 곱하기 2를 한다.</p>\n</li>\n<li>\n<p>만약 곱하기 2를 한 숫자가 10이상이면 10의 자리와 1의 자리로 더한다</p>\n</li>\n<li>\n<p>위 과정이 다 끝나고 최종적으로 더한 숫자가 10의 배수이면 참 아니면 거짓</p>\n</li>\n</ol>\n<p>백준 예제 입력에 있는\n<code class=\"language-text\">2720992711828767</code>를 예를 들면</p>\n<ol>\n<li>입력값을 나열합니다.</li>\n</ol>\n<p>2 + 7 + 2 + 0 + 9 + 9 + 2 + 7 + 1 + 1 + 8 + 2 + 8 + 7 + 6 + 7</p>\n<ol start=\"2\">\n<li>가장 오른쪽에 있는 7이 첫번째이며 더할때 짝수의 자리들은 곱하기 2를 합니다.</li>\n</ol>\n<p>(2 * 2) + 7 + (2 * 2) + 0 + (9 * 2) + 9 + (2 * 2) + 7 + (1 * 2) + 1 + (8 * 2) + 2 + (8 * 2) + 7 + (6 * 2) + 7</p>\n<ol start=\"3\">\n<li>곱하기 2를 한 숫자가 10이상 존재하면 해당 값은 10의 자리와 1의 자리로 더합니다.</li>\n</ol>\n<p>4 + 7 + 4 + 0 + (1 + 8) + 9 + 4 + 7 + 2 + 1 + (1 + 6) + 2 + (1 + 6) + 7 + (1 + 2) + 7</p>\n<ol start=\"4\">\n<li>위 과정이 다 끝나고 최종적으로 더한 숫자가 10의 배수이면 <strong>True</strong> 아니면 <strong>False</strong></li>\n</ol>\n<p>80 % 10 == 0</p>\n<h3>참고 문헌</h3>\n<blockquote>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EB%A3%AC_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">룬 알고리즘 - 위키백과, 우리 모두의 백과사전 (wikipedia.org)</a></p>\n</blockquote>","frontmatter":{"title":"[백준] 14726 - 신용카드 판별","date":"2022-08-20","tags":["BOJ","Algorithm"],"description":"백준 온라인 저지 14726번 신용카드 판별 알고리즘 설명 및 풀이"}}},"pageContext":{"slug":"/boj/14726"}},"staticQueryHashes":[]}